/* VARIABLES */

:root {
    --color1: #c6c5b9;
    --color2: #62929e;
    --color3: #4a6d7c;
    --color4: #393a10;
    --color5: #475657;
}


/* RESETS */

* {
    margin: 0;
    padding: 0;
    font-family: sans-serif;
}

/* GLOBAL STYLES/CLASSES */

body {
    background-color: var(--color1);
}

header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: var(--color3);
    padding: 10px 5%;
    /* position: fixed; */
}

header h1 {
    background-color: var(--color4);
    margin: 1% 0.5%;
    padding: 1% 2% 1% 2%;
    border-radius: 10px;
}

header h1:hover {
    padding: 1% 2% 1% 5%;
    transition: padding .3s ease-in-out;
}

header h1 a {
    text-decoration: none;
    color: var(--color1);
}

header nav ul li {
    /* float: right; */
    /* So this is how I learned that float is an old element that we should avoid, which JD touched on in class. It kinda broke my nav, but removing it fixed things. */
    display: inline;
    justify-content: space-between;
    font-weight: 600;
    font-size: 130%;
}

header nav ul li a {
    color: var(--color1);
    text-decoration: none;
    margin-left: 5px;
    margin-right: 5px;
}

.hero {
    position: relative;
    padding: 10px 5%;
}

.hero section {
    display: flex;
    background-color: var(--color2);
    margin: 10px;
    padding: 20px;
    border-radius: 10px;
    font-size: 110%
}

.hero section h2 {
    text-align: right;
    border-right: 1px solid var(--color4);
    padding-right: 10px;
    max-width: 15%;
    min-width: 15%;
    font-weight: 600;
    font-size: 150%;
}

#about_me {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    justify-content: space-between;
}

.about_me_sub {
    flex: 1 1 500px;
    max-width: 500px;
    margin-right: 20px;
}

.about_me_sub p {
    padding: 0px 1em;
    font-size: large;
    font-weight: 500;
}

.profile_picture {
    width: 100%;
    height: auto;
    max-width: 300px;
    min-width: 150px;
    align-self: flex-start;
}

.grid_container {
    display: grid;
    grid-template-columns: repeat(2, 1fr);/* fr is like rem and em, but specifically for grids */
    gap: 20px;
    justify-items: center;
    align-items: center;
}

.grid_item {
    text-align: center;
    flex-basis: 50%;
}

/* I couldn't for the life of me figure this out, so I asked ChatGPT and the answer was so simple. Make it span both columns of the grid. */
.grid_item.big {
    grid-column: span 2;
}

.grid_item img {
    max-width: 100%;
    height: auto;
}

/* Additional styles for first image. Placed here to ensure they ONLY affect the top item. */
.grid_item.big img {
    width: 100%;
    max-width: none;
}

.grid_item.big h3 {
    font-size: 1.2rem;
    margin-top: 10px;
}

.contact {
    display: flex;
    justify-content: space-between;
    margin: 20px;
    padding: 20px;
    list-style: none;
}

.contact li a {
    color: var(--color1);
    text-decoration: none;
    margin-left: 10px;
    margin-right: 10px;
    font-weight: 600;
    font-size: 130%;
}